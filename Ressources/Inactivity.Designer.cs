//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InactivityBot.Ressources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Inactivity {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Inactivity() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("InactivityBot.Ressources.Inactivity", typeof(Inactivity).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully canceled the reaction event, but could not find the message to delete..
        /// </summary>
        public static string Cancel_MessageNotFound {
            get {
                return ResourceManager.GetString("Cancel_MessageNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully canceled the reaction event, but could not delete the message because of missing permissions..
        /// </summary>
        public static string Cancel_MissingPermissions {
            get {
                return ResourceManager.GetString("Cancel_MissingPermissions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully canceled and deleted the message..
        /// </summary>
        public static string Cancel_Success {
            get {
                return ResourceManager.GetString("Cancel_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom emotes are currently not supported!.
        /// </summary>
        public static string Emoji_Custom {
            get {
                return ResourceManager.GetString("Emoji_Custom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Emoji was specified!.
        /// </summary>
        public static string Emoji_NoSpecified {
            get {
                return ResourceManager.GetString("Emoji_NoSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully set {0} as new {1} Emoji! Please also make sure to use the commands !cancel and !inactivity so that everything works as intended again!.
        /// </summary>
        public static string Emoji_Success {
            get {
                return ResourceManager.GetString("Emoji_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;m sorry but there was an error. Please contact the Author {0} and tell them about the following error: {1}..
        /// </summary>
        public static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Raids were found..
        /// </summary>
        public static string GetRaid_NoRaids {
            get {
                return ResourceManager.GetString("GetRaid_NoRaids", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current raids are: .
        /// </summary>
        public static string GetRaid_Success {
            get {
                return ResourceManager.GetString("GetRaid_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thank you for answering the questions. Your Inactivity Report will now be proccessed by your Raid-Leaders or one of the moderators. Please be patient, as this proccess will take some time..
        /// </summary>
        public static string Inactive_Success {
            get {
                return ResourceManager.GetString("Inactive_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your Guild Wars 2 account name.
        /// </summary>
        public static string Inactivity_AccountName {
            get {
                return ResourceManager.GetString("Inactivity_AccountName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please also specifiy the last 4 digits of your GW2 account name!.
        /// </summary>
        public static string Inactivity_AccountName_DigitsMissing {
            get {
                return ResourceManager.GetString("Inactivity_AccountName_DigitsMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are no longer inactive!.
        /// </summary>
        public static string Inactivity_Active {
            get {
                return ResourceManager.GetString("Inactivity_Active", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is no longer inactive!.
        /// </summary>
        public static string Inactivity_Active_Lead {
            get {
                return ResourceManager.GetString("Inactivity_Active_Lead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current destination channel is: {0}.
        /// </summary>
        public static string Inactivity_Channel {
            get {
                return ResourceManager.GetString("Inactivity_Channel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How long will you be inactive/paused?.
        /// </summary>
        public static string Inactivity_Duration {
            get {
                return ResourceManager.GetString("Inactivity_Duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account name.
        /// </summary>
        public static string Inactivity_Embed_AccountName {
            get {
                return ResourceManager.GetString("Inactivity_Embed_AccountName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Period.
        /// </summary>
        public static string Inactivity_Embed_Period {
            get {
                return ResourceManager.GetString("Inactivity_Embed_Period", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Raids.
        /// </summary>
        public static string Inactivity_Embed_Raids {
            get {
                return ResourceManager.GetString("Inactivity_Embed_Raids", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reason.
        /// </summary>
        public static string Inactivity_Embed_Reason {
            get {
                return ResourceManager.GetString("Inactivity_Embed_Reason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inactivity!.
        /// </summary>
        public static string Inactivity_Embed_Title {
            get {
                return ResourceManager.GetString("Inactivity_Embed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to React with {0} to be inactiv or {1} to be active again!.
        /// </summary>
        public static string Inactivity_Message {
            get {
                return ResourceManager.GetString("Inactivity_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No destination channel is specified. Please make sure to specifiy one, using the command !setChannel.
        /// </summary>
        public static string Inactivity_MissingChannel {
            get {
                return ResourceManager.GetString("Inactivity_MissingChannel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No inactivity role is specified. Please make sure to specifiy one, using the command !setRole.
        /// </summary>
        public static string Inactivity_MissingRole {
            get {
                return ResourceManager.GetString("Inactivity_MissingRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No destination channel was set. To set one, use the command !channel [channelName] (where [channelName] is the name of the channel or the ping to it).
        /// </summary>
        public static string Inactivity_NoChannel {
            get {
                return ResourceManager.GetString("Inactivity_NoChannel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No inactivity role was set. To set one, use the command !role [roleName] (where [roleName] is the name of the role or the ping of it).
        /// </summary>
        public static string Inactivity_NoRole {
            get {
                return ResourceManager.GetString("Inactivity_NoRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please state the reason, as to why you are pausing.
        /// </summary>
        public static string Inactivity_Reason {
            get {
                return ResourceManager.GetString("Inactivity_Reason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current inactivity role is: {0}.
        /// </summary>
        public static string Inactivity_Role {
            get {
                return ResourceManager.GetString("Inactivity_Role", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Raid is not present in the collection. To see what Raid is in the collection currently, use the command &quot;!getRaids&quot;..
        /// </summary>
        public static string RemoveRaid_RaidNotFound {
            get {
                return ResourceManager.GetString("RemoveRaid_RaidNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Raid was successfully removed from the collection!.
        /// </summary>
        public static string RemoveRaid_Success {
            get {
                return ResourceManager.GetString("RemoveRaid_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide a channel by referencing it with # and the channel name. e.g. #inactivity.
        /// </summary>
        public static string SetChannel_NoChannel {
            get {
                return ResourceManager.GetString("SetChannel_NoChannel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Succesfully set the destination channel!.
        /// </summary>
        public static string SetChannel_Success {
            get {
                return ResourceManager.GetString("SetChannel_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Language code was provided. Please specify either &quot;en-US&quot; for English or &quot;de-DE&quot; for German!.
        /// </summary>
        public static string SetLanguage_NoLocale {
            get {
                return ResourceManager.GetString("SetLanguage_NoLocale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided Language code was wrong or is currently not supported. Either use &quot;en-US&quot; for English or &quot;de-DE&quot; for German..
        /// </summary>
        public static string SetLanguage_NotSupported {
            get {
                return ResourceManager.GetString("SetLanguage_NotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully changed language!.
        /// </summary>
        public static string SetLanguage_Success {
            get {
                return ResourceManager.GetString("SetLanguage_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please specify a raid role either by pinging it (with an @) or writing the name of it..
        /// </summary>
        public static string SetRaid_NoRaid {
            get {
                return ResourceManager.GetString("SetRaid_NoRaid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find the specified raid role. Please make sure that the name is correct and it exists..
        /// </summary>
        public static string SetRaid_NotFound {
            get {
                return ResourceManager.GetString("SetRaid_NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully added the Raid Role!.
        /// </summary>
        public static string SetRaid_Success {
            get {
                return ResourceManager.GetString("SetRaid_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please specify a role by referencing it with an @. e.g. @inactive, @admin, ....
        /// </summary>
        public static string SetRole_NoRole {
            get {
                return ResourceManager.GetString("SetRole_NoRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find the specified role. Please make sure that the name is correct and it exists..
        /// </summary>
        public static string SetRole_RoleNotFound {
            get {
                return ResourceManager.GetString("SetRole_RoleNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully set the inactive role!.
        /// </summary>
        public static string SetRole_Success {
            get {
                return ResourceManager.GetString("SetRole_Success", resourceCulture);
            }
        }
    }
}
